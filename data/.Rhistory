kovetkezo <- k1 + k2
k1=k2
k2=kovetkezo
}
print(kovetkezo)
for (i in 3:4) {
kovetkezo <- k1 + k2
k1=k2
k2=kovetkezo
}
print(kovetkezo)
k1=0
k2=1
# Generate the next 8 Fibonacci numbers
for (i in 3:4) {
kovetkezo <- k1 + k2
k1=k2
k2=kovetkezo
}
print(kovetkezo)
k1=0
k2=1
# Generate the next 8 Fibonacci numbers
for (i in 3:5) {
kovetkezo <- k1 + k2
k1=k2
k2=kovetkezo
}
print(kovetkezo)
k1=0
k2=1
# Generate the next 8 Fibonacci numbers
for (i in 3:6) {
kovetkezo <- k1 + k2
k1=k2
k2=kovetkezo
}
print(kovetkezo)
k1=0
k2=1
# Generate the next 8 Fibonacci numbers
for (i in 3:110) {
kovetkezo <- k1 + k2
k1=k2
k2=kovetkezo
}
print(kovetkezo)
k1=0
k2=1
# Generate the next 8 Fibonacci numbers
for (i in 3:111) {
kovetkezo <- k1 + k2
k1=k2
k2=kovetkezo
}
print(kovetkezo)
paros_fibonacci <- function(x) {
fib1=0
fib2=1
i=1
while (i<=x*2) {
kovetkezo <- fib1 + fib2
fib1=fib2
fib2=kovetkezo
print(kovetkezo)
}
print(kovetkezo)
}
paros_fibonacci(5)
paros_fibonacci(5)
paros_fibonacci <- function(x) {
fib1=0
fib2=1
i=1
while (i<=x*2) {
kovetkezo <- fib1 + fib2
fib1=fib2
fib2=kovetkezo
print(kovetkezo)
i=i+1
}
print(kovetkezo)
}
paros_fibonacci(5)
fib <- c(0,1)
paros_fibonacci <- function(x) {
fib <- c(0,1)
i=1
while (i<=x*2) {
kovetkezo <- fib[i-1] + fib[i]
fib <- c(fib, kovetkezo)
print(kovetkezo)
i=i+1
}
print(fib)
}
paros_fibonacci(5)
print(fib %%2==0)
print(fib[%%2==0])
print(fib[%%2==0])
print(fib[fib %%2==0])
paros_fibonacci <- function(x) {
fib <- c(0,1)
i=1
while (i<=x*2) {
kovetkezo <- fib[i-1] + fib[i]
fib <- c(fib, kovetkezo)
print(kovetkezo)
i=i+1
}
print(fib)
print(fib[fib %%2==0])
}
paros_fibonacci(5)
paros_fibonacci <- function(x) {
fib <- c(0,1)
i=1
while (i<=x*2) {
kovetkezo <- fib[i-1] + fib[i]
fib <- c(fib, kovetkezo)
print(kovetkezo)
i=i+1
}
print(fib[fib %%2==0])
}
paros_fibonacci(5)
paros_fibonacci <- function(x) {
k1=0
k2=1
fib_paros <- k1
i=1
while (i<x) {
kovetkezo <- k1 + k2
k1=k2
k2=kovetkezo
if (kovetkezo%%2==0) {
fib_paros <- c(fib_paros, kovetkezo)
i=i+1
}
print(kovetkezo)
}
print(fib_paros)
}
paros_fibonacci(5)
paros_fibonacci <- function(x) {
k1=0
k2=1
fib_paros <- k1
i=1
while (i<x) {
kovetkezo <- k1 + k2
k1=k2
k2=kovetkezo
if (kovetkezo%%2==0) {
fib_paros <- c(fib_paros, kovetkezo)
i=i+1
}
print(kovetkezo)
}
print(fib_paros)
}
paros_fibonacci(8)
rmarkdown::run("repo/learnr.Rmd")
git2r::clone(url = "https://github.com/MarcellGranat/bigdata2023_learnr.git", local_path = "repo")
rmarkdown::run("repo/learnr.Rmd")
rmarkdown::run("repo/learnr.Rmd")
rmarkdown::run("repo/learnr.Rmd")
library(git2r)
library(rmarkdown)
library(learnr)
library(devtools)
devtools::install_github("rundel/learnrhash")
library(tidyverse)
library(shinyalert)
devtools::install_github("rstudio/gradethis")
git2r::clone(url = "https://github.com/MarcellGranat/bigdata2023_learnr.git", local_path = "repo")
rmarkdown::run("repo/learnr.Rmd")
rmarkdown::run("repo/learnr.Rmd")
devtools::install_github("rundel/learnrhash",force=TRUE)
devtools::install_github("rstudio/gradethis",force = TRUE)
rmarkdown::run("repo/learnr.Rmd")
paros_fibonacci <- function(x) {
k1=0
k2=1
fib_paros <- k1
i=1
while (i<x) {
kovetkezo <- k1 + k2
k1=k2
k2=kovetkezo
if (kovetkezo%%2==0) {
fib_paros <- c(fib_paros, kovetkezo)
i=i+1
}
}
print(fib_paros)
}
paros_fibonacci(5)
for (i in 3:111) {
kovetkezo <- k1 + k2
k1=k2
k2=kovetkezo
}
k1=0
k2=1
# Generate the next 8 Fibonacci numbers
for (i in 3:111) {
kovetkezo <- k1 + k2
k1=k2
k2=kovetkezo
}
print(kovetkezo)
library(tidyverse)
fertility_df <- read_csv("https://stats.oecd.org/sdmx-json/data/DP_LIVE/.FERTILITY.../OECD?contentType=csv&detail=code&separator=comma&csv-lang=en")
fertility_df %>% select(geo=LOCATION, time=TIME, fertility=Value)
fertility_df %>% select(geo=LOCATION, time=TIME, fertility=Value) %>% filter(geo=="HUN" | geo=="AUT" | geo=="SVK")
View(.Last.value)
fertility_df %>% select(geo=LOCATION, time=TIME, fertility=Value) %>% filter(geo=="HUN" | geo=="AUT" | geo=="SVK") %>%
group_by(geo) %>% mutate(decade=time if time%%10==0 else NA)
fertility_df %>% select(geo=LOCATION, time=TIME, fertility=Value) %>% filter(geo=="HUN" | geo=="AUT" | geo=="SVK") %>%
group_by(geo) %>% mutate(decade=time ~. if time%%10==0 else NA)
fertility_df %>% select(geo=LOCATION, time=TIME, fertility=Value) %>% filter(geo=="HUN" | geo=="AUT" | geo=="SVK") %>%
group_by(geo) %>% mutate(decade=~. time if time%%10==0 else NA)
fertility_df %>% select(geo=LOCATION, time=TIME, fertility=Value) %>% filter(geo=="HUN" | geo=="AUT" | geo=="SVK") %>%
group_by(geo) %>% mutate(decade= ~. time if time%%10==0 else NA)
group_by(geo) %>% mutate(decade= ifelse(test=time%%10==0, "yes"=time, "no"=NA)
fertility_df %>% select(geo=LOCATION, time=TIME, fertility=Value) %>% filter(geo=="HUN" | geo=="AUT" | geo=="SVK") %>%
fertility_df %>% select(geo=LOCATION, time=TIME, fertility=Value) %>% filter(geo=="HUN" | geo=="AUT" | geo=="SVK") %>%
group_by(geo) %>% mutate(decade= ifelse(test=time%%10==0, "yes"=time, "no"=NA))
View(.Last.value)
fertility_df %>% select(geo=LOCATION, time=TIME, fertility=Value) %>% filter(geo=="HUN" | geo=="AUT" | geo=="SVK") %>%
group_by(geo) %>% mutate(decade = (time%/%10)*10)
View(.Last.value)
fertility_df %>% select(geo=LOCATION, time=TIME, fertility=Value) %>% filter(geo=="HUN" | geo=="AUT" | geo=="SVK") %>%
group_by(geo) %>% mutate(decade = (time%/%10)*10) %>% group_by(decade) %>% mutate(mean_fertility=mean(fertility))
View(.Last.value)
fertility_df %>% select(geo=LOCATION, time=TIME, fertility=Value) %>% filter(geo=="HUN" | geo=="AUT" | geo=="SVK") %>%
group_by(geo) %>% mutate(decade = (time%/%10)*10) %>% group_by(geo & decade) %>% mutate(mean_fertility=mean(fertility))
fertility_df %>% select(geo=LOCATION, time=TIME, fertility=Value) %>% filter(geo=="HUN" | geo=="AUT" | geo=="SVK") %>%
group_by(geo) %>% mutate(decade = (time%/%10)*10)  %>% group_by(decade) %>%
summarise(median_fertility = median(fertility))
fertility_df %>% select(geo=LOCATION, time=TIME, fertility=Value) %>% filter(geo=="HUN" | geo=="AUT" | geo=="SVK") %>%
group_by(geo) %>% mutate(decade = (time%/%10)*10, median_fertility=)  %>% group_by(geo,decade) %>%
mutate(median_fertility=median(fertility))
fertility_df %>% select(geo=LOCATION, time=TIME, fertility=Value) %>% filter(geo=="HUN" | geo=="AUT" | geo=="SVK") %>%
group_by(geo) %>% mutate(decade = (time%/%10)*10)  %>% group_by(geo,decade) %>%
mutate(median_fertility=median(fertility))
View(.Last.value)
median(fertility_df$Value)
fertility_df %>% select(geo=LOCATION, time=TIME, fertility=Value) %>% filter(geo=="HUN" | geo=="AUT" | geo=="SVK") %>%
group_by(geo) %>% mutate(decade = (time%/%10)*10)  %>% group_by(geo,decade) %>%
mutate(median_fertility=median(fertility)) %>% select(geo, decade, median_fertility) %>%
pivot_wider(names_from = geo, values_from = median_fertility)
View(.Last.value)
fertility_df %>% select(geo=LOCATION, time=TIME, fertility=Value) %>% filter(geo=="HUN" | geo=="AUT" | geo=="SVK") %>%
group_by(geo) %>% mutate(decade = (time%/%10)*10)  %>% group_by(geo,decade) %>%
mutate(median_fertility=median(fertility)) %>% select(geo, decade, median_fertility) %>%
pivot_wider(names_from = c(geo, time), values_from = median_fertility)
fertility_df %>% select(geo=LOCATION, time=TIME, fertility=Value) %>% filter(geo=="HUN" | geo=="AUT" | geo=="SVK") %>%
group_by(geo) %>% mutate(decade = (time%/%10)*10)  %>% group_by(geo,decade) %>%
mutate(median_fertility=median(fertility)) %>% select(geo, decade, median_fertility) %>%
pivot_wider(names_from = c(geo, decade), values_from = median_fertility)
View(.Last.value)
fertility_df %>% select(geo=LOCATION, time=TIME, fertility=Value) %>% filter(geo=="HUN" | geo=="AUT" | geo=="SVK") %>%
group_by(geo) %>% mutate(decade = (time%/%10)*10)  %>% group_by(geo,decade) %>%
mutate(median_fertility=median(fertility)) %>% select(geo, decade, median_fertility)
View(.Last.value)
fertility_df %>% select(geo=LOCATION, time=TIME, fertility=Value) %>% filter(geo=="HUN" | geo=="AUT" | geo=="SVK") %>%
group_by(geo) %>% mutate(decade = (time%/%10)*10)  %>% group_by(geo,decade) %>%
mutate(median_fertility=median(fertility)) %>% select(geo, decade, median_fertility) %>%
pivot_wider(names_from = c(geo, decade), values_from = distinct(median_fertility))
fertility_df %>% select(geo=LOCATION, time=TIME, fertility=Value) %>% filter(geo=="HUN" | geo=="AUT" | geo=="SVK") %>%
group_by(geo) %>% mutate(decade = (time%/%10)*10)  %>% group_by(geo,decade) %>%
mutate(median_fertility=median(fertility)) %>% select(geo, decade, median_fertility) %>%
pivot_wider(names_from = c(geo, decade), values_from = distinct(median_fertility))
fertility_df %>% select(geo=LOCATION, time=TIME, fertility=Value) %>% filter(geo=="HUN" | geo=="AUT" | geo=="SVK") %>%
group_by(geo) %>% mutate(decade = (time%/%10)*10)  %>% group_by(geo,decade) %>%
mutate(median_fertility=median(fertility)) %>% select(geo, decade, median_fertility) %>%
pivot_wider(names_from = geo, values_from = median_fertility)
View(.Last.value)
fertility_df %>% select(geo=LOCATION, time=TIME, fertility=Value) %>% filter(geo=="HUN" | geo=="AUT" | geo=="SVK") %>%
group_by(geo) %>% mutate(decade = (time%/%10)*10)  %>% group_by(geo,decade) %>%
mutate(median_fertility=median(fertility)) %>% select(geo, decade, distinc(median_fertility)) %>%
pivot_wider(names_from = geo, values_from = median_fertility)
fertility_df %>% select(geo=LOCATION, time=TIME, fertility=Value) %>% filter(geo=="HUN" | geo=="AUT" | geo=="SVK") %>%
group_by(geo) %>% mutate(decade = (time%/%10)*10)  %>% group_by(geo,decade) %>%
mutate(median_fertility=median(fertility)) %>% select(geo, decade, distinct(median_fertility)) %>%
pivot_wider(names_from = geo, values_from = median_fertility)
fertility_df %>% select(geo=LOCATION, time=TIME, fertility=Value) %>% filter(geo=="HUN" | geo=="AUT" | geo=="SVK") %>%
group_by(geo) %>% mutate(decade = (time%/%10)*10)  %>% group_by(geo,decade) %>%
mutate(median_fertility=median(fertility)) %>% select(geo, decade, distinct(fertility_df$median_fertility)) %>%
pivot_wider(names_from = geo, values_from = median_fertility)
fertility_df %>% select(geo=LOCATION, time=TIME, fertility=Value) %>% filter(geo=="HUN" | geo=="AUT" | geo=="SVK") %>%
group_by(geo) %>% mutate(decade = (time%/%10)*10)  %>% group_by(geo,decade) %>%
mutate(median_fertility=median(fertility)) %>% select(geo, decade,median_fertility) %>% mutate(med=distinct(median_fertility)) %>%
pivot_wider(names_from = geo, values_from = median_fertility)
fertility_df %>% select(geo=LOCATION, time=TIME, fertility=Value) %>% filter(geo=="HUN" | geo=="AUT" | geo=="SVK") %>%
group_by(geo) %>% mutate(decade = (time%/%10)*10)  %>% group_by(geo,decade) %>%
mutate(median_fertility=median(fertility)) %>% select(geo, decade,median_fertility) %>% mutate(med=unique(median_fertility)) %>%
pivot_wider(names_from = geo, values_from = median_fertility)
View(.Last.value)
fertility_df %>% select(geo=LOCATION, time=TIME, fertility=Value) %>% filter(geo=="HUN" | geo=="AUT" | geo=="SVK") %>%
group_by(geo) %>% mutate(decade = (time%/%10)*10)  %>% group_by(geo,decade) %>%
mutate(median_fertility=median(fertility)) %>% select(geo, decade, unique(median_fertility) %>%
pivot_wider(names_from = geo, values_from = median_fertility)
fertility_df %>% select(geo=LOCATION, time=TIME, fertility=Value) %>% filter(geo=="HUN" | geo=="AUT" | geo=="SVK") %>%
fertility_df %>% select(geo=LOCATION, time=TIME, fertility=Value) %>% filter(geo=="HUN" | geo=="AUT" | geo=="SVK") %>%
group_by(geo) %>% mutate(decade = (time%/%10)*10)  %>% group_by(geo,decade) %>%
mutate(median_fertility=median(fertility)) %>% select(geo, decade, unique(median_fertility)) %>%
pivot_wider(names_from = geo, values_from = median_fertility)
fertility_df %>% select(geo=LOCATION, time=TIME, fertility=Value) %>% filter(geo=="HUN" | geo=="AUT" | geo=="SVK") %>%
group_by(geo) %>% mutate(decade = (time%/%10)*10)  %>% group_by(geo,decade) %>%
mutate(median_fertility=median(fertility)) %>% select(geo, decade, median_fertility= unique(median_fertility)) %>%
pivot_wider(names_from = geo, values_from = median_fertility)
fertility_df %>% select(geo=LOCATION, time=TIME, fertility=Value) %>% filter(geo=="HUN" | geo=="AUT" | geo=="SVK") %>%
group_by(geo) %>% mutate(decade = (time%/%10)*10)  %>% group_by(geo,decade) %>%
mutate(median_fertility=unique(median(fertility))) %>% select(geo, decade, median_fertility) %>%
pivot_wider(names_from = geo, values_from = median_fertility)
fertility_df %>% select(geo=LOCATION, time=TIME, fertility=Value) %>% filter(geo=="HUN" | geo=="AUT" | geo=="SVK") %>%
group_by(geo) %>% mutate(decade = (time%/%10)*10)  %>% group_by(geo,decade) %>%
mutate(median_fertility=unique(median(fertility))) %>% select(geo, decade, median_fertility) %>%
pivot_wider(names_from = geo, values_from = median_fertility)
View(.Last.value)
fertility_df %>% select(geo=LOCATION, time=TIME, fertility=Value) %>%
filter(geo=="HUN" | geo=="AUT" | geo=="SVK") %>%
group_by(geo) %>%
mutate(decade = (time%/%10)*10)  %>%
group_by(geo,decade) %>%
mutate(median_fertility=distinct(median(fertility))) %>%
select(geo, decade, median_fertility) %>%
pivot_wider(names_from = geo, values_from = median_fertility)
fertility_df %>% select(geo=LOCATION, time=TIME, fertility=Value) %>%
filter(geo=="HUN" | geo=="AUT" | geo=="SVK") %>%
group_by(geo) %>%
mutate(decade = (time%/%10)*10)  %>%
group_by(geo,decade) %>%
mutate(median_fertility=median(fertility)) %>%
select(geo, decade, median_fertility) %>% distinct() %>%
pivot_wider(names_from = geo, values_from = median_fertility)
View(.Last.value)
fertility_df %>% select(geo=LOCATION, time=TIME, fertility=Value) %>%
filter(geo=="HUN" | geo=="AUT" | geo=="SVK") %>%
group_by(geo) %>%
mutate(decade = (time%/%10)*10)  %>%
group_by(geo,decade) %>%
mutate(median_fertility=median(fertility)) %>%
select(geo, decade, median_fertility) %>%
pivot_wider(names_from = geo, values_from = median_fertility)
View(.Last.value)
fertility_df %>% select(geo=LOCATION, time=TIME, fertility=Value) %>%
filter(geo=="HUN" | geo=="AUT" | geo=="SVK") %>%
group_by(geo) %>%
mutate(decade = (time%/%10)*10)  %>%
group_by(geo,decade) %>%
mutate(median_fertility=median(fertility)) %>%
select(geo, decade, median_fertility) %>% distinct() %>%
pivot_wider(names_from = geo, values_from = median_fertility)
View(.Last.value)
unlink("repo", recursive = TRUE)
git2r::clone(url = "https://github.com/MarcellGranat/bigdata2023_learnr.git", local_path = "repo")
unlink("repo", recursive = TRUE)
git2r::clone(url = "https://github.com/MarcellGranat/bigdata2023_learnr.git", local_path = "repo")
rmarkdown::run("repo/learnr.Rmd")
library(git2r)
library(rmarkdown)
library(learnr)
library(devtools)
devtools::install_github("rundel/learnrhash",force=TRUE)
unlink("repo", recursive = TRUE)
git2r::clone(url = "https://github.com/MarcellGranat/bigdata2023_learnr.git", local_path = "repo")
rmarkdown::run("repo/learnr.Rmd")
git2r::clone(url = "https://github.com/MarcellGranat/bigdata2023_learnr.git", local_path = "repo")
rmarkdown::run("repo/learnr.Rmd")
devtools::install_github("rstudio/gradethis")
git2r::clone(url = "https://github.com/MarcellGranat/bigdata2023_learnr.git", local_path = "repo")
rmarkdown::run("repo/learnr.Rmd")
git2r::clone(url = "https://github.com/MarcellGranat/bigdata2023_learnr.git", local_path = "repo")
rmarkdown::run("repo/learnr.Rmd")
unlink("repo", recursive = TRUE)
rmarkdown::run("repo/learnr.Rmd")
git2r::clone(url = "https://github.com/MarcellGranat/bigdata2023_learnr.git", local_path = "repo")
rmarkdown::run("repo/learnr.Rmd")
economania_df <- read_csv("https://gist.githubusercontent.com/MarcellGranat/e33c618e4b0cf57771514d207de3dfc0/raw/5a34f45b703e54a8584489468a1af89ca22978b0/gistfile1.txt") %>%
select(-1) %>%
group_by(author) %>%
filter(author != "Chaoyi Chen") %>%
summarise(posts = list(text))
library(tidyverse)
economania_df <- read_csv("https://gist.githubusercontent.com/MarcellGranat/e33c618e4b0cf57771514d207de3dfc0/raw/5a34f45b703e54a8584489468a1af89ca22978b0/gistfile1.txt") %>%
select(-1) %>%
group_by(author) %>%
filter(author != "Chaoyi Chen") %>%
summarise(posts = list(text))
View(economania_df)
economania_df$posts[12]
is.na(economania_df$posts[12])
is.na(economania_df$posts[12][4])
economania_df$posts[12][4]
economania_df$posts[12][3]
economania_df$posts[[12]][3]
economania_df$posts[[12]][4]
is,na(economania_df$posts[[12]][4])
is.na(economania_df$posts[[12]][4])
economania_df %>% filter(!economania_df$posts[[12]][4])
economania_df %>% filter(!posts[[12]][4])
economania_df %>% filter(!posts[[12]][4])
economania_df %>% filter(posts[[12]][-4])
economania_df %>%
mutate(
posts= posts[[12]][-4],
n = sapply(posts, length),
fed1 = map(posts, ~ as.vector(str_detect(., "\\s(Fed|FED|Federal Reserve)\\s"))),
ecb2 = map(posts, ~str_to_lower(.)),
ecb1 = map(ecb2, ~ as.vector(str_detect(., "\\s(ekb|ecb|európai központi bank)\\s")))
)
economania_df %>%
mutate(
posts[[12]]= posts[[12]][-4],
economania_df <- economania_df$posts[[12]] <- economania_df$posts[[12]][-4]
economania_df$posts[[12]] <- economania_df$posts[[12]][-4]
library(tidyverse)
economania_df <- read_csv("https://gist.githubusercontent.com/MarcellGranat/e33c618e4b0cf57771514d207de3dfc0/raw/5a34f45b703e54a8584489468a1af89ca22978b0/gistfile1.txt") %>%
select(-1) %>%
group_by(author) %>%
filter(author != "Chaoyi Chen") %>%
summarise(posts = list(text))
economania_df$posts[[12]] <- economania_df$posts[[12]][-4]
economania_df %>%
mutate(
posts[[12]]= posts[[12]][-4],
economania_df %>%
mutate(
n = sapply(posts, length),
fed1 = map(posts, ~ as.vector(str_detect(., "\\s(Fed|FED|Federal Reserve)\\s"))),
ecb2 = map(posts, ~str_to_lower(.)),
ecb1 = map(ecb2, ~ as.vector(str_detect(., "\\s(ekb|ecb|európai központi bank)\\s")))
)
View(.Last.value)
economania_df <- economania_df %>%
mutate(
n = sapply(posts, length),
fed2 = map(posts, ~str_to_lower(.)),
fed1 = map(fed2, ~ as.vector(str_detect(., "\\s(fed|federal reserve)\\s"))),
fed = map_dbl(fed1, ~ sum(.==TRUE)/length(.)),
ecb2 = map(posts, ~str_to_lower(.)),
ecb1 = map(ecb2, ~ as.vector(str_detect(., "\\s(ekb|ecb|európai központi bank)\\s"))),
ecb = map_dbl(ecb1, ~ sum(.==TRUE)/length(.))
)
View(.Last.value)
library(tidyverse)
economania_df <- read_csv("https://gist.githubusercontent.com/MarcellGranat/e33c618e4b0cf57771514d207de3dfc0/raw/5a34f45b703e54a8584489468a1af89ca22978b0/gistfile1.txt") %>%
select(-1) %>%
group_by(author) %>%
filter(author != "Chaoyi Chen") %>%
summarise(posts = list(text))
economania_df$posts[[12]] <- economania_df$posts[[12]][-4]
economania_df %>%
mutate(
n = sapply(posts, length),
fed1 = map(posts, ~ as.vector(str_detect(., "\\s(Fed|FED|Federal Reserve)\\s"))),
ecb2 = map(posts, ~str_to_lower(.)),
ecb1 = map(ecb2, ~ as.vector(str_detect(., "\\s(ekb|ecb|európai központi bank)\\s")))
) %>%
map(fed1, ~ replace_na(fed1=FALSE)) %>%
mutate(fed = map_dbl(fed1, ~ sum(.==TRUE)/length(.)),
ecb = map_dbl(ecb1, ~ sum(.==TRUE)/length(.))
) %>%
select(author, posts, n, fed, ecb)
economania_df %>%
mutate(
n = sapply(posts, length),
fed1 = map(posts, ~ as.vector(str_detect(., "\\s(Fed|FED|Federal Reserve)\\s"))),
ecb2 = map(posts, ~str_to_lower(.)),
ecb1 = map(ecb2, ~ as.vector(str_detect(., "\\s(ekb|ecb|európai központi bank)\\s")))
fed = map_dbl(fed1, ~ sum(.==TRUE)/length(.)),
economania_df %>%
mutate(
n = sapply(posts, length),
fed1 = map(posts, ~ as.vector(str_detect(., "\\s(Fed|FED|Federal Reserve)\\s"))),
ecb2 = map(posts, ~str_to_lower(.)),
ecb1 = map(ecb2, ~ as.vector(str_detect(., "\\s(ekb|ecb|európai központi bank)\\s"))),
fed = map_dbl(fed1, ~ sum(.==TRUE)/length(.)),
ecb = map_dbl(ecb1, ~ sum(.==TRUE)/length(.))
) %>%
select(author, posts, n, fed, ecb)
View(.Last.value)
economania_df %>%
mutate(
n = sapply(posts, length),
fed1 = map(posts, ~ as.vector(str_detect(., "Fed"))),
ecb1 = map(posts, ~ as.vector(str_detect(., "EKB"))),
fed = map_dbl(fed1, ~ sum(.==TRUE)/length(.)),
ecb = map_dbl(ecb1, ~ sum(.==TRUE)/length(.))
) %>%
select(author, posts, n, fed, ecb)
library(tidyverse)
economania_df %>%
mutate(
n = sapply(posts, length),
fed1 = map(posts, ~ as.vector(str_detect(., "Fed"))),
ecb1 = map(posts, ~ as.vector(str_detect(., "EKB"))),
fed = map_dbl(fed1, ~ sum(.==TRUE)/length(.)),
ecb = map_dbl(ecb1, ~ sum(.==TRUE)/length(.))
) %>%
select(author, posts, n, fed, ecb)
setwd("~/GitHub/ECOPY_23241/data")
library(readr)
df <- read_csv("StudentsPerformance.csv")
View(df)
count(df$`math score` > 50)
df$`math score` > 50
nrow(df$`math score` > 50)
